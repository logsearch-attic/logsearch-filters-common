if [@type] in ["syslog", "relp"] {
    grok {
        match => { "@message" => "(?:%{INT:syslog6587_msglen} )?<%{POSINT:syslog_pri}>(?:%{NONNEGINT:syslog5424_ver} )?(?:%{SYSLOGTIMESTAMP:syslog_timestamp}|%{TIMESTAMP_ISO8601:syslog_timestamp}) %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?(:)? %{GREEDYDATA:syslog_message}" }
        add_field => [ "received_at", "%{@timestamp}" ]
        add_field => [ "received_from", "%{host}" ]
        add_tag => [ "syslog_standard" ]
        tag_on_failure => ["_grokparsefailure-syslog_standard"]
    }

    if !("_grokparsefailure-syslog_standard" in [tags]) {
        syslog_pri { }

        date {
            match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
            timezone => "UTC"
        }

        # hostname: handle syslog configurations where hostname is localhost
        if ([syslog_hostname] == "localhost" ) {
            grok {
                match => { "received_from" => "%{IPORHOST:syslog_hostname}(?::%{POSINT:syslog_port})?" }
                overwrite => [ "syslog_hostname", "syslog_port" ]
                tag_on_failure => [ "_grokparsefailure-syslog_standard-hostname"]
            }
        }

        mutate {
            replace => [ "@source.host", "%{syslog_hostname}" ]
        }

        mutate {
            convert => [ "syslog5424_ver", "integer" ]
            convert => [ "syslog6587_msglen", "integer" ]
            remove_field => [
                #"syslog_pri",
                "syslog_hostname",
                "syslog_port",
                "syslog_timestamp"
            ]
        }
    }
}
