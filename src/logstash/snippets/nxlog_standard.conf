if "NXLOG@14506" == [syslog_sd_id] {
    # We're going to treat syslog as a transparent transport and pretend it was never even
    # utilized. This means we'll drop the syslog metadata, but it really shouldn't matter.

    mutate {
        # This is a workaround to an apparent bug where logstash treats a non-existant field
        # as an array which causes a "Not possible to merge an array and a hash" error. Here
        # we force the probably non-existant field to a hash with a temp field so we can use
        # the mutate's merge option.
        add_field => [ "@source[_forcemeahash]", "workaround" ]
    }

    mutate {
        merge => [ "@source", "syslog_sd_params" ]
        rename => [ "syslog_message", "@message" ]
        remove_field => [ "@source[_forcemeahash]" ]
    }

    mutate {
        # syslog is just the transport; no need to store
        remove_field => "syslog_message"
        remove_field => "syslog_pri"
        remove_field => "syslog5424_ver"
        remove_field => "syslog_program"
        remove_field => "syslog_severity_code"
        remove_field => "syslog_facility_code"
        remove_field => "syslog_facility"
        remove_field => "syslog_severity"
        remove_field => "syslog_sd_id"
        remove_field => "syslog_sd_params"

        # syslog host is actually the shipper
        rename => [ "@source.host", "@shipper[host]" ]

        # these are parsed with kv, but they're static nxlog shipper properties
        rename => [ "@source[EventReceivedTime]", "@shipper[event_received_time]" ]
        rename => [ "@source[SourceModuleName]", "@shipper[module_name]" ]
        rename => [ "@source[SourceModuleType]", "@shipper[module_type]" ]
    }
}
